#[ 문자열 포맷 ]

# 숫자 대입 %d
print("제 나이는 %d살 입니다." %20)
print("제 나이는 %d살 입니다." %22)

# 문자열 대입 %s
print("제 이름은 %s 입니다." %"홍길동")
print("제 이름은 %s 입니다." %"김철수")

# 숫자형 변수 대입
age = 23
print("제 나이는 %d살 입니다." %age)

# 여러개 값 대입
name = "홍길동"
age = 20
print("저의 이름은 %s 입니다. 그리고 나이는 %d살 입니다" %(name, age))

'''
포맷 코드
%s : 문자열(String)
%d : 정수(Integer)
%f : 실수형(float)
%c : 문자(character)
%o : 8진수
%x : 16진수
%% : 리터럴 % 출력
'''

print("완치될 확률은 %d%% 입니다." %70) # 리터널 % 예제

'''
[ 포맷코드의 활용 예]
소숫점 표현하기
'''
# 소수점 자리수
print("%0.7f" %2.123456789)

# 정렬과 공백처리
print("%10s" %"hello") # 우측정렬
print("%-10s" %"hello") # 좌측정렬

print("%-15sPython!!!" %"Hello")
print("%-6sPython!!!" %"Hello")

'''
[리스트]
다른 언어의 배열과 같은 형태
'''
aa = [10, 20, 30]
movies = ["쇼생크탈출", "친구", "로마의 휴일"]
bb = [10, 20, "친구", "로마의 휴일"]
cc = [10, 20, ["친구", "로마의 휴일"]]
dd = [] # 빈 리스트
# 리스트 내에는 어떤한 자료형도 포함시킬 수 있다.

'''
[리스트 인덱싱, 슬라이싱]
'''
aa = [10, 20, 30]
print(aa[0])
print(aa) # 리스트 형태 그대로 출력됨

print(aa[-1]) # 인덱스 값이 음수인 경우 뒤에서 부터 요소를 가리킨다.

bb = [10,20,30,["ab", "cd", "ef"]] # 이중 리스트구조

print(bb[0])
print(bb[-1])
print(bb[3])

print(bb[-1][1])

cc=[10,20,['aa', 'bb', 'cc',["친구", "로마의 휴일"]]]  # 삼중 리스트구조

print(cc[2][3][0]) # 삼중리스트구조에서 인덱싱

# 리스트 슬라이싱

ab = [1, 10, 100, 1000, 10000]

print(ab[:3])

ab = "110100100010000"
print(ab[:3]) # 문자열 슬라이싱

bc = [1, 10, 100, ['aa', 'bb', 'cc'], 1000, 10000]
print(bc[2:5])

print(bc[3][1:])

# 리스트 연산 (+:병합, *:반복)
aa = [10, 20, 30]

bb = [100, 200, 300]

print(aa + bb) # 병합

print(aa * 2) # 반복

# 리스트 값 변경

print(aa[1])

aa[1] = 100  # 문자열, 튜플의 형의 요소값은 변경할 수 없지만, 리스트의 요소값은 변경할 수 있다.
print(aa)

print(aa[2:])
aa[2:] = ["친구", "바보"]
print(aa)
aa[:1] = [1,2,3] # 리스트 길이 벗어나서 데이터가 추가됨?? 하나의 요소로 들어감
print(aa)

print(aa[1:3])

aa[1:3] = ["백", "천", "만"]

print(aa)

aa[4] = ["십만", "백만", "천만"] # 리스트가 들어감

print(aa)

aa[1:4] = []  # 요소 삭제 : 인덱스1에서 4까지 삭제

print(aa)

del aa[0]  # del함수를 이용한 삭제 방법 del(파이썬 내장함수) del 객체(모든 자료형)

print(aa)

''' 4) 튜플(tuple) : 리스트와 비슷한 자료형이다.
  - 리스트와 튜플의 차이점
    . 리스트는 [ ], 튜플은 ( ) 를 사용한다.
	. 리스트는 요소의 변경(수정, 삭제, 생성)이 가능하지만, 튜플은 요소의 값을 변경할 수 없다.

  사용 예>
  tu = () --> 빈값이 들어 있는 형태
  tu2 = (1,) --> 한개 있어도 콤마 넣어준다
  tu3 =(10, 20, 30,40)
  tu4 = 10,20,30
  tu5 = ("친구", "로마의 휴일",("ab", "cd"))

튜플의 인덱싱, 슬라이싱, 연산
'''

tu = ('a', 'b', 'c', 10, 1000)

print(tu[0])

print(tu[2:])

tu2 = ('d', 'e', 'f')
print(tu + tu2) # 튜플끼리 병합 가능

print(tu * 3) # 튜블 곱하기 가능

del tu2[2]  # 튜플은 문자열처럼 요소를 변경하는 것을 허용하지 않는다. 에러!!